name: Docker Image CI

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: setup JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'adopt'
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: reg.wintern.at
          username: ${{ secrets.DOCKER_REG_USER }}
          password: ${{ secrets.DOCKER_REG_PW }}

      - name: Build Image
        run: mvn spring-boot:build-image

      - name: Tag Image
        run: docker tag reg.wintern.at/bucketlist:latest reg.wintern.at/bucketlist:develop

      - name: List Images
        run: docker images

      - name: Push to repo
        run: docker push reg.wintern.at/bucketlist:develop

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: test
        run: echo test
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.CA_CRT }}" > ca.crt
          echo "${{ secrets.SECRET_USERNAME_PASSWORD }}" > secret.txt
          echo "${{ secrets.TLS_KEY }}" > tls.key
      - name: Connect VPN
        run: sudo openvpn --config ".github/vpn/config.ovpn" --log "vpn.log" --daemon

      - name: Wait for a VPN connection
        timeout-minutes: 2
        run: until ping -c1 ${{ secrets.STAGE_MASCHINE_IP }}; do sleep 2; done
      - name: SSH
        run: |
          ssh -p ${{ secrets.SERVICE_USER_PW }}${{ secrets.SERVICE_USER }}@${{ secrets.STAGE_MASCHINE_IP }}
          echo "Github was here" > github.txt

      - name: Kill VPN connection
        if: always()
        run: |
          sudo chmod 777 vpn.log
          sudo killall openvpn    

      - name: Upload VPN logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: VPN logs
          path: vpn.log
