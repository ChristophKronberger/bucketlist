name: Docker Image CI

on:
  push:
    branches: [ "develop" ]

jobs:

  deploy:
    env:
      VPN_HOST: ${{ secrets.STAGE_VPN_SERVER }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          sed -i 's/\$PLACEHOLDER\$/'"$VPN_HOST"'/' /home/runner/work/bucketlist/bucketlist/.github/vpn/config.ovpn
          echo "${{ secrets.CA_CRT }}" > ca.crt
          echo "${{ secrets.STAGE_VPN_USER_PASSWORD }}" > secret.txt
          echo "${{ secrets.TLS_KEY }}" > tls.key
          echo "${{ secrets.SERVICE_USER_PASSWORD }}" > ssh.key
      - name: Connect VPN
        run: sudo openvpn --config "/home/runner/work/bucketlist/bucketlist/.github/vpn/config.ovpn" --log "vpn.log" --daemon

      - name: Wait for a VPN connection
        timeout-minutes: 2
        run: until ping -c1 ${{ secrets.STAGE_MASCHINE_IP }}; do sleep 2; done

      - name : install sshpass
        run: sudo apt-get install sshpass

      - name: SSH
        run: |
          sshpass -f ssh.key ssh ${{ secrets.SERVICE_USER }}@${{ secrets.STAGE_MASCHINE_IP }}
          echo "Github was here" > github.txt

      - name: Kill VPN connection
        if: always()
        run: |
          sudo chmod 777 vpn.log
          sudo killall openvpn    

      - name: Upload VPN logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: VPN logs
          path: vpn.log
